---
const TITLES_NAVBAR = [
  { title: "Models", href: "/" },
  { title: "Forums", href: "/" },
  { title: "Wiki", href: "/" },
  { title: "Developers", href: "/" },
  { title: "Partners", href: "/" },
  { title: "Hosting", href: "/" },
];
import Github from "./icons/Github.astro";
import Windows from "./icons/Windows.astro";
import HeaderItems from "./items/HeaderItems.astro";
---

<header
  class="fixed left-1/2 -translate-x-1/2 text-white top-6 backdrop-blur-md bg-black/20 flex items-center justify-between py-4 z-50 rounded-2xl max-w-8xl w-[90%] sm:w-[80%] px-4 border border-white/10 shadow-lg"
>
  <nav class="flex items-center justify-between w-full gap-4">
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-2">
      <img
        class="w-14 h-10 rounded-lg hover:scale-110 transition-all duration-300 shadow-md"
        src="/mtasa.webp"
        alt="Logo"
      />
      <span class="font-bold text-lg hidden sm:block">MTA:SA</span>
    </a>

    <!-- Desktop menu -->
    <ul class="hidden lg:flex items-center gap-6">
      {
        TITLES_NAVBAR.map((item) => (
          <HeaderItems title={item.title} href={item.href} />
        ))
      }
    </ul>

    <!-- Mobile hamburger -->
    <button
      id="menu-btn"
      class="lg:hidden flex flex-col gap-[5px] w-8 h-8 justify-center items-center"
      aria-label="Toggle menu"
    >
      <span class="block h-[2px] w-6 bg-white transition-all"></span>
      <span class="block h-[2px] w-6 bg-white transition-all"></span>
      <span class="block h-[2px] w-6 bg-white transition-all"></span>
    </button>

    <!-- Desktop buttons -->
    <div class="hidden lg:flex items-center gap-4">
      <a
        href="/"
        class="text-white/90 hover:text-white bg-white/10 hover:bg-white/20 transition-all duration-300 font-medium rounded-lg text-sm px-4 py-2 text-center inline-flex items-center gap-2 border border-white/10"
      >
        <Github size="4" />
        Contribute
      </a>
      <button
        class="relative w-max gap-x-3 cursor-pointer inline-flex h-10 items-center justify-center overflow-hidden rounded-lg bg-gradient-to-r from-blue-500 to-blue-600 px-6 font-medium text-white transition-all hover:scale-105 hover:shadow-lg focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-black"
      >
        <Windows size="24" />
        Download Now
      </button>
    </div>
  </nav>

  <!-- Mobile menu -->
  <div
    id="mobile-menu"
    class="absolute top-full left-0 w-full bg-black/80 backdrop-blur-md border-t border-white/10 flex flex-col p-4 gap-4 lg:hidden opacity-0 pointer-events-none transition-all duration-300"
  >
    {
      TITLES_NAVBAR.map((item) => (
        <a
          href={item.href}
          class="py-2 px-3 rounded-lg hover:bg-white/10 transition"
        >
          {item.title}
        </a>
      ))
    }
    <a
      href="/"
      class="text-white/90 hover:text-white bg-white/10 hover:bg-white/20 transition-all duration-300 font-medium rounded-lg text-sm px-4 py-2 text-center inline-flex items-center gap-2 border border-white/10"
    >
      <Github size="4" />
      Contribute
    </a>
    <button
      class="relative w-max gap-x-3 cursor-pointer inline-flex h-10 items-center justify-center overflow-hidden rounded-lg bg-gradient-to-r from-blue-500 to-blue-600 px-6 font-medium text-white transition-all hover:scale-105 hover:shadow-lg focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-black"
    >
      <Windows size="24" />
      Download Now
    </button>
  </div>
</header>

<script>
  const menuBtn = document.getElementById("menu-btn");
  const mobileMenu = document.getElementById("mobile-menu");

  menuBtn.addEventListener("click", () => {
    mobileMenu.classList.toggle("opacity-0");
    mobileMenu.classList.toggle("pointer-events-none");

    // Animar el icono hamburguesa
    menuBtn.classList.toggle("open");
    const spans = menuBtn.querySelectorAll("span");
    if (menuBtn.classList.contains("open")) {
      spans[0].style.transform = "rotate(45deg) translateY(6px)";
      spans[1].style.opacity = "0";
      spans[2].style.transform = "rotate(-45deg) translateY(-6px)";
    } else {
      spans.forEach((span) => {
        span.style.transform = "";
        span.style.opacity = "1";
      });
    }
  });
</script>
